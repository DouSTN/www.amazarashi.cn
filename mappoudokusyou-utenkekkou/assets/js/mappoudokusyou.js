"use strict";

// setting
var breakPointSp = 800;
var mql = window.matchMedia("screen and (min-width: ".concat(breakPointSp + 1, "px)"));
mql.addListener(handleMediaQuery); // 画面サイズ取得

var winWidth = window.innerWidth;
var winHeight = window.innerHeight;
var pcFlg;
var $body = $('body');
$(function () {
  domContentLoadEvent();
});
$(window).on('load', function () {
  initLoadEvent();
});
$(window).on('scroll load', function () {
  Win.scroll.top = $(window).scrollTop();
  Parallax.config.$item.each(function (index, val) {
    var _elmH = $(val).offset().top;

    var _diff = (_elmH - Win.scroll.top) * 0.1;

    if (!pcFlg) {
      _diff = (_elmH - Win.scroll.top) * 0.05;
    }

    if (index % 2 === 0) {
      _diff = -_diff;
    }

    $(val).css({
      'transform': "translate3d(0, ".concat(_diff, "px, 0)")
    });
  });
});
$(window).on('resize', function () {
  if (winWidth !== window.innerWidth) {
    $('.p-hero').css({
      'height': "".concat(innerHeight, "px")
    });
  }

  Bg.movie.setWidth();
  updateSize();
}); // html読み込み完了後に実行

function domContentLoadEvent() {
  handleMediaQuery(mql);
  $body = $('body');
  updateSize();
  Bg.movie.init();
  $('.p-hero').css({
    'height': "".concat(innerHeight, "px")
  });
  setTimeout(function () {
    $body.addClass('is-ready');
  }, 50);
} // 全てのファイル読み込み完了後に実行


function initLoadEvent() {
  smoothScroll(0, 650, 'easeOutCubic');
  setScrollEffect();
  textSplit('.js-split');
  $body.addClass('is-load');
}

function updateSize() {
  winWidth = window.innerWidth;
  winHeight = window.innerHeight;
} // メディアクエリに応じて実行したい処理


function handleMediaQuery(mql) {
  if (mql.matches) {
    pcFlg = true;
    Special.config.$cover.on({
      'mouseenter': function mouseenter() {
        $(this).parents('.p-special__list-item').addClass('is-link-open');
      },
      'mouseleave': function mouseleave() {
        $(this).parents('.p-special__list-item').removeClass('is-link-open');
      }
    });
  } else {
    pcFlg = false;
    Special.config.$thumb.on('click', function () {
      $(this).parents('.p-special__list-item').addClass('is-link-open');
    });
    Special.config.$close.on('click', function () {
      $(this).parents('.p-special__list-item').removeClass('is-link-open');
    });
  }
}

function getRandomInt(min, max) {
  return Math.floor(Math.random() * (max - min) + min);
}

var Win = {
  scroll: {
    top: null
  }
};
var Parallax = {
  config: {
    $item: $('.js-parallax')
  }
};
var Op = {
  duration: 5600,
  config: {
    $elm: $('.p-op')
  },
  scrollTop: function scrollTop() {
    setTimeout(function () {
      // Bg.movie.player.seekTo(229.5, true);
      scrollTo(0, 0);
      $body.css('overflow', 'hidden');
    }, 3100);
  },
  end: function end() {
    setTimeout(function () {
      $body.addClass('op-end');
    }, Op.duration);
  }
};

var Movie = {
  initialized: false,
  instance: undefined,
  activeIndex: 0,
  // swiper起動しなかった場合も値をとれるように
  options: {
    speed: 800,
    loop: true,
    loopAdditionalSlides: 3,
    spaceBetween: 78,
    slideToClickedSlide: true,
    autoplay: {
      delay: 5000,
      disableOnInteraction: false
    },
    breakpoints: {
      800: {
        spaceBetween: 20
      }
    }
  },
  youtube: {
    player: undefined,
    videoid: undefined,
    config: {
      $wrapper: $('.p-movie__inner'),
      $item: $('.p-movie__slide-item'),
      $thumbItem: $('.p-movie__bg-thumb .p-in-item')
    },
    init: function init() {
      var _this1 = this;

      _this1.getVideoId();

      _this1.player = new YT.Player('movie_player', {
        videoId: _this1.videoid,
        playerVars: {
          playsinline: 1,
          autoplay: 1,
          loop: 1,
          playlist: _this1.videoid,
          controls: 0,
          disablekb: 1,
          enablejsapi: 1,
          iv_load_policy: 3,
          rel: 0,
          start: 10
        },
        events: {
          'onReady': _this1.onPlayerReady,
          'onStateChange': _this1.onPlayerStateChange
        }
      });
    },
    onPlayerReady: function onPlayerReady(event) {
      event.target.mute();
      event.target.playVideo();
    },
    onPlayerStateChange: function onPlayerStateChange(e) {
      if (e.data === 1) {
        Movie.youtube.config.$wrapper.addClass('is-movie-playing');
      } else if (e.data === 2) {
        Movie.youtube.config.$wrapper.removeClass('is-movie-playing');
      }
    },
    getVideoId: function getVideoId() {
      var _this1 = this;

      _this1.videoid = _this1.config.$item.eq(Movie.activeIndex).data('modal').split('youtube:')[1];
    },
    changeMovide: function changeMovide() {
      this.getVideoId();
      this.player.loadVideoById(this.videoid, 10);
    },
    switchThumb: function switchThumb() {
      this.config.$thumbItem.removeClass('is-show').eq(Movie.activeIndex).addClass('is-show');
    }
  },
  init: function init() {
    this.initialized = true;
    Youtube_modal.init();

    if (this.youtube.config.$item.length > 1) {
      this.instance = new Swiper('.p-movie__slide-container', Movie.options);
      this.instance.on('slideChange', function () {
        Youtube_modal.instance.Update();
        Movie.activeIndex = Movie.instance.realIndex;
        Movie.youtube.changeMovide();
        Movie.youtube.switchThumb();
      });
      this.youtube.config.$wrapper.addClass('swiper-initialized');
    }

    Movie.youtube.init();
    Movie.youtube.switchThumb();
  }
};

var Special = {
  config: {
    $cover: $('.p-special__list-cover'),
    $thumb: $('.p-special__list-cover figure'),
    $close: $('.p-special__list-close')
  },
  attachEvent: function attachEvent() {
    var _this = this;

    if (pcFlg) {
      _this.config.$cover.on({
        'mouseenter': function mouseenter() {
          $(this).parents('.p-special__list-item').addClass('is-link-open');
        },
        'mouseleave': function mouseleave() {
          $(this).parents('.p-special__list-item').removeClass('is-link-open');
        }
      });
    } else {
      _this.config.$thumb.on('click', function () {
        $(this).parents('.p-special__list-item').addClass('is-link-open');
      });
    }

    _this.config.$close.on('click', function () {
      $(this).parents('.p-special__list-item').removeClass('is-link-open');
    });
  }
}; // text split

function textSplit(target) {
  var _target = document.querySelectorAll(target);

  var _nodes = [];

  for (var i = 0; i < _target.length; i++) {
    _nodes.push(_target[i].childNodes);
  }

  var _htmlList = [];

  for (var _i2 = 0; _i2 < _nodes.length; _i2++) {
    var _html = [];

    for (var index = 0; index < _nodes[_i2].length; index++) {
      if (_nodes[_i2][index].nodeType === 3) {
        var _text = _nodes[_i2][index].textContent;

        var _array = _text.split('');

        for (var _i = 0; _i < _array.length; _i++) {
          _html.push('<span>' + _array[_i] + '</span>');
        }
      } else {
        _html.push(_nodes[_i2][index].outerHTML);
      }
    }

    _htmlList.push(_html);
  }

  $(target).each(function (index, val) {
    $(this).html(_htmlList[index]);
  });
} // スムーススクロール


function smoothScroll(gap, duration, easing) {
  var urlHash = location.hash;

  if (urlHash) {
    $('body,html').stop().scrollTop(0);
    setTimeout(function () {
      var $_target = $(urlHash);
      var $_targetY = $_target.offset().top - gap;
      $('body,html').stop().animate({
        scrollTop: $_targetY
      }, duration, easing);
    }, 50);
  }

  $('a[href*="#"]').on('click', function () {
    var $_target = $(this.hash);
    if (!$_target.length) return;
    var $_targetY = $_target.offset().top - gap;
    $('html,body').animate({
      scrollTop: $_targetY
    }, duration, easing);
    return false;
  });
} // スクロール演出


var ScrollEffectModule;

function setScrollEffect() {
  ScrollEffectModule = new SCROLL_EFFECT_MODULE({
    elem: '.js-scroll',
    firstElem: '.js-scroll--first',
    displayRatio: 0.8,
    displayReverse: false,
    addClassNameActive: 'is-active',
    on: {
      In: function In(item, pos, obj, top) {
        if ($(item).hasClass('p-track') && Movie.initialized == false) {
          Movie.init();
        }
      }
    }
  });
} // let footerScrollEffec;
// function setFooterScrollEffect() {
//   footerScrollEffec = new SCROLL_EFFECT_MODULE({
//     elem: '.js-scroll-footer',
//     firstElem: '.js-scroll--first',
//     displayRatio: 0.99,
//     displayReverse: true,
//     addClassNameActive: 'is-active',
//   });
// }
//# sourceMappingURL=data:application/json;charset=utf-8;base64,